/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DynamicSerialCreator } from "./DynamicSerialCreator";

export class DynamicSerialCreatorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _implementation: string,
    overrides?: Overrides
  ): Promise<DynamicSerialCreator> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<DynamicSerialCreator>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): DynamicSerialCreator {
    return super.attach(address) as DynamicSerialCreator;
  }
  connect(signer: Signer): DynamicSerialCreatorFactory {
    return super.connect(signer) as DynamicSerialCreatorFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DynamicSerialCreator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DynamicSerialCreator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "serialId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serialSize",
        type: "uint256",
      },
    ],
    name: "CreatedSerial",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_animationUrl",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_animationHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_imageHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_serialSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltyBPS",
        type: "uint256",
      },
    ],
    name: "createSerial",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "serialId",
        type: "uint256",
      },
    ],
    name: "getSerialAtId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b5060405161071738038061071783398101604081905261003391610058565b600180546001600160a01b0319166001600160a01b0392909216919091179055610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b610680806100976000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c60da1b1461004657806360a8748914610075578063798fdf3a1461008a575b600080fd5b600154610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100886100833660046103f8565b61009d565b005b6100596100983660046104f1565b6101c2565b6001546000805460405191926100e6926001600160a01b03909116916100c99160200190815260200190565b6040516020818303038152906040526100e1906105e4565b610261565b90506100f1816102ff565b604051631a3622e960e01b81526001600160a01b03821690631a3622e99061012d908d908d908d908d908d908d908d908d908d90600401610557565b600060405180830381600087803b15801561014757600080fd5b505af115801561015b573d6000803e3d6000fd5b50506000546040805191825233602083015281018690527f524632856502612c693fa151fe25e92775eddd97fffdf0ae7260e76025484fe49250606001905060405180910390a16000805490806101b18361060b565b919050555050505050505050505050565b600154604080516020810184905260009261025b926001600160a01b0390911691016040516020818303038152906040526101fc906105e4565b30604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b92915050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b03811661025b5760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b604482015260640160405180910390fd5b6040516001600160a01b03821660248201526103479060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b17905261034a565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600082601f83011261037c57600080fd5b813567ffffffffffffffff8082111561039757610397610634565b604051601f8301601f19908116603f011681019082821181831017156103bf576103bf610634565b816040528381528660208588010111156103d857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060006101208a8c03121561041757600080fd5b893567ffffffffffffffff8082111561042f57600080fd5b61043b8d838e0161036b565b9a5060208c013591508082111561045157600080fd5b61045d8d838e0161036b565b995060408c013591508082111561047357600080fd5b61047f8d838e0161036b565b985060608c013591508082111561049557600080fd5b6104a18d838e0161036b565b975060808c0135965060a08c01359150808211156104be57600080fd5b506104cb8c828d0161036b565b94505060c08a0135925060e08a013591506101008a013590509295985092959850929598565b60006020828403121561050357600080fd5b5035919050565b6000815180845260005b8181101561053057602081850181015186830182015201610514565b81811115610542576000602083870101525b50601f01601f19169290920160200192915050565b600061012080835261056b8184018d61050a565b9050828103602084015261057f818c61050a565b90508281036040840152610593818b61050a565b905082810360608401526105a7818a61050a565b905087608084015282810360a08401526105c1818861050a565b60c0840196909652505060e0810192909252610100909101529695505050505050565b80516020808301519190811015610605576000198160200360031b1b821691505b50919050565b600060001982141561062d57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122034348c9ce7e9955781aed427123c533b039b8515044c25878f613c5ecf4f134464736f6c63430008060033";
