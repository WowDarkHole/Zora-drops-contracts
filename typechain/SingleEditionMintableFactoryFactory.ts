/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SingleEditionMintableCreator } from "./SingleEditionMintableCreator";

export class SingleEditionMintableCreatorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _implementation: string,
    overrides?: Overrides
  ): Promise<SingleEditionMintableCreator> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<SingleEditionMintableCreator>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): SingleEditionMintableCreator {
    return super.attach(address) as SingleEditionMintableCreator;
  }
  connect(signer: Signer): SingleEditionMintableCreatorFactory {
    return super.connect(signer) as SingleEditionMintableCreatorFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SingleEditionMintableCreator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SingleEditionMintableCreator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "serialId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serialSize",
        type: "uint256",
      },
    ],
    name: "CreatedSerial",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_animationUrl",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_animationHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_imageUrl",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_imageHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_serialSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltyBPS",
        type: "uint256",
      },
    ],
    name: "createSerial",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "serialId",
        type: "uint256",
      },
    ],
    name: "getSerialAtId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506040516106b83803806106b883398101604081905261003391610058565b600180546001600160a01b0319166001600160a01b0392909216919091179055610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b610621806100976000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c60da1b1461004657806360a8748914610075578063798fdf3a1461008a575b600080fd5b600154610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610088610083366004610386565b61009d565b005b61005961009836600461047f565b6101bc565b6001546000805460405191926100e6926001600160a01b03909116916100c99160200190815260200190565b6040516020818303038152906040526100e190610585565b61025b565b60405163025f0ea960e41b81529091506001600160a01b038216906325f0ea90906101279033908e908e908e908e908e908e908e908e908e906004016104e5565b600060405180830381600087803b15801561014157600080fd5b505af1158015610155573d6000803e3d6000fd5b50506000546040805191825233602083015281018690527f524632856502612c693fa151fe25e92775eddd97fffdf0ae7260e76025484fe49250606001905060405180910390a16000805490806101ab836105ac565b919050555050505050505050505050565b6001546040805160208101849052600092610255926001600160a01b0390911691016040516020818303038152906040526101f690610585565b30604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b92915050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166102555760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b604482015260640160405180910390fd5b600082601f83011261030a57600080fd5b813567ffffffffffffffff80821115610325576103256105d5565b604051601f8301601f19908116603f0116810190828211818310171561034d5761034d6105d5565b8160405283815286602085880101111561036657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060006101208a8c0312156103a557600080fd5b893567ffffffffffffffff808211156103bd57600080fd5b6103c98d838e016102f9565b9a5060208c01359150808211156103df57600080fd5b6103eb8d838e016102f9565b995060408c013591508082111561040157600080fd5b61040d8d838e016102f9565b985060608c013591508082111561042357600080fd5b61042f8d838e016102f9565b975060808c0135965060a08c013591508082111561044c57600080fd5b506104598c828d016102f9565b94505060c08a0135925060e08a013591506101008a013590509295985092959850929598565b60006020828403121561049157600080fd5b5035919050565b6000815180845260005b818110156104be576020818501810151868301820152016104a2565b818111156104d0576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038b1681526101406020820181905260009061050a8382018d610498565b9050828103604084015261051e818c610498565b90508281036060840152610532818b610498565b90508281036080840152610546818a610498565b90508760a084015282810360c08401526105608188610498565b60e0840196909652505061010081019290925261012090910152979650505050505050565b805160208083015191908110156105a6576000198160200360031b1b821691505b50919050565b60006000198214156105ce57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220038ea53ea3c8c4e1e58a1e1ad7cb3da1490c4c1ddde5c89c79e41a1d7f22085164736f6c63430008060033";
